"""
3. Создайте собственный класс-исключение,
который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя,
например, команду “stop”. При этом скрипт завершается,
сформированный список выводится на экран.
Подсказка: для данного задания примем,
что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать
проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class Error(Exception):
    def __init__(self, message: str):
        self.message = message
        Exception.__init__(self)  # зачем эта строчка?

    def __str__(self):
        return self.message


flag = True
list_num = []
while flag:

    a = input("Введите число: ")
    if a == "stop":
        flag = False
    try:
        if a.isdigit():
            list_num.append(a)
            print(list_num)
        else:
            raise Error("Введено не число")

    except Error:
        print(Error("Введено не число"))

print(list_num)